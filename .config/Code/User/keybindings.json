// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive' && !terminalFocus"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.debug.restart",
    "when": "debuggersAvailable && inDebugMode && !terminalFocus"
  },
  {
    "key": "alt+up",
    "command": "workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "ctrl+i",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+d",
    "command": "revealFileInOS"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.files.openFolder"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.files.openLocalFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+m",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.saveFiles"
  },
  {
    "key": "ctrl+alt+s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+f",
    "command": "editor.action.startFindReplaceAction"
  },
  {
    "key": "ctrl+[Quote]",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "ctrl+[Semicolon]",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "ctrl+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[",
    "command": "better-pest.run"
  },
  {
    "key": "ctrl+shift+[BracketLeft]",
    "command": "better-pest.run-file"
  },
  {
    "key": "ctrl+alt+[BracketLeft]",
    "command": "better-pest.run-suite"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+-",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+-",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "key": "escape",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "ctrl+alt+'",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+l",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "alt+s",
    "command": "git.sync"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "alt+-",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+.",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  }
]
